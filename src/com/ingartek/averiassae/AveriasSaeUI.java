package com.ingartek.averiassae;

import javax.servlet.annotation.WebServlet;

import org.vaadin.highcharts.HighChart;

import com.vaadin.annotations.Theme;
import com.vaadin.annotations.VaadinServletConfiguration;
import com.vaadin.server.VaadinRequest;
import com.vaadin.server.VaadinServlet;
import com.vaadin.ui.UI;
import com.vaadin.ui.VerticalLayout;

@SuppressWarnings("serial")
@Theme("averiasSaeTheme")
public class AveriasSaeUI extends UI {

	@WebServlet(value = "/*", asyncSupported = true)
	@VaadinServletConfiguration(productionMode = false, ui = AveriasSaeUI.class)
	public static class Servlet extends VaadinServlet {
	}

	@Override
	protected void init(VaadinRequest request) {
		
		final VerticalLayout layout = new VerticalLayout();
		layout.setMargin(true);
		setContent(layout);

		/*Button button = new Button("hazme click le√±e");
		button.addClickListener(new Button.ClickListener() {
			public void buttonClick(ClickEvent event) {
				layout.addComponent(new Label("gasias"));
			}
		});
		layout.addComponent(button);*/
		
		HighChart areaChart = new HighChart();
		areaChart.setHcjs(
			"var options = { "
				+ "chart: { type: 'area', backgroundColor: 'rgba(255, 255, 255, 0.1)'},"
				+ "title: { text: 'Historic and Estimated Worldwide Population Growth by Region'},"
				+ "subtitle: { text: 'Source: Wikipedia.org' },"
				+ "xAxis: { "
					+ "categories: ['1750', '1800', '1850', '1900', '1950', '1999', '2050'],"
					+ "tickmarkPlacement: 'on',"
					+ "title: { enabled: false }"
  
        			+ "},"
    			+ "yAxis: {"
    				+ "title: { text: 'Billions'},"
    				+ "labels: { formatter: function () { return this.value / 1000; } }"
    			+ "},"
    			+ "tooltip: {"
    				+ "shared: true,"
    				+ "valueSuffix: ' millions'"
    			+ "},"
    			+ "plotOptions: {"
    				+ "area: { stacking: 'normal', lineColor: '#666666', lineWidth: 1,"
    					+ "marker: { lineWidth: 1, lineColor: '#666666'}"
        			+ "}"
    			+ "},"
    			+ "series: ["
    				+ "{name: 'Asia', data: [502, 635, 809, 947, 1402, 3634, 5268]}, "
    				+ "{name: 'Africa', data: [106, 107, 111, 133, 221, 767, 1766]}, "
    				+ "{name: 'Europe', data: [163, 203, 276, 408, 547, 729, 628]}, "
    				+ "{name: 'America', data: [18, 31, 54, 156, 339, 818, 1201]}, "
    				+ "{name: 'Oceania', data: [2, 2, 2, 6, 13, 30, 46]}"
    			+ "]"
    		+ "}"
        );
		layout.addComponent(areaChart);
		
		HighChart columnChart = new HighChart();
		columnChart.setHcjs(
			"var options = { "
				+ "chart: {"
					+ "type: 'column', "
					+ "backgroundColor: 'rgba(255, 255, 255, 0.1)'"
				+ "},"
				+ "title: {"
					+ "text: 'Stacked column chart'"
				+ "},"
				+ "xAxis: {"
					+ "categories: ['Apples', 'Oranges', 'Pears', 'Grapes', 'Bananas']"
				+ "},"
				+ "yAxis: {"
					+ "min: 0,"
					+ "title: {"
						+ "text: 'Total fruit consumption'"
					+ "}"
				+ "},"
				+ "tooltip: {"
					+ "pointFormat: '<span style=\"color:{series.color}\">{series.name}</span>: <b>{point.y}</b> ({point.percentage:.0f}%)<br/>',"
					+ "shared: true"
				+ "},"
				+ "plotOptions: {"
					+ "column: {"
						+ "stacking: 'percent'"
					+ "}"
				+ "},"
				+ "series: ["
					+ "{"
						+ "name: 'John',"
						+ "data: [5, 3, 4, 7, 2]"
					+ "}, {"
						+ "name: 'Jane',"
						+ "data: [2, 2, 3, 2, 1]"
					+ "}, {"
						+ "name: 'Joe',"
						+ "data: [3, 4, 4, 2, 5]"
					+ "}]"
				+ "}"
		);
		layout.addComponent(columnChart);
		
		HighChart pieChart = new HighChart();
		pieChart.setHcjs(

			"var options = { "
				+ "chart: {"
					+ "type: 'pie', "
					+ "backgroundColor: 'rgba(255, 255, 255, 0.1)'"
				+ "},"
				+ "title: {"
					+ "	text: 'Browser market shares. January, 2015 to May, 2015'"
				+ "},"
				+ "subtitle: {"
					+ "	text: 'Click the slices to view versions. Source: netmarketshare.com.'"
				+ "},"
				+ "plotOptions: {"
					+ "	series: {"
					+ "		dataLabels: {"
					+ "			enabled: true,"
					+ "			format: '{point.name}: {point.y:.1f}%'"
					+ "		}"
					+ "	}"
				+ "},"
				+ "tooltip: {"
					+ "	headerFormat: '<span style=\"font-size:11px\">{series.name}</span><br>',"
					+ "	pointFormat: '<span style=\"color:{point.color}\">{point.name}</span>: <b>{point.y:.2f}%</b> of total<br/>'"
				+ "},"
				+ "series: [{"
					+ "	name: \"Brands\","
					+ "	colorByPoint: true,"
					+ "	data: [{"
					+ "		name: \"Microsoft Internet Explorer\","
					+ "		y: 56.33,"
					+ "		drilldown: \"Microsoft Internet Explorer\""
					+ "	}, {"
					+ "		name: \"Chrome\","
					+ "		y: 24.03,"
					+ "		drilldown: \"Chrome\""
					+ "	}, {"
					+ "		name: \"Firefox\","
					+ "		y: 10.38,"
					+ "		drilldown: \"Firefox\""
					+ "	}, {"
					+ "		name: \"Safari\","
					+ "		y: 4.77,"
					+ "		drilldown: \"Safari\""
					+ "	}, {"
					+ "		name: \"Opera\","
					+ "		y: 0.91,"
					+ "		drilldown: \"Opera\""
					+ "	}, {"
					+ "		name: \"Proprietary or Undetectable\","
					+ "		y: 0.2,"
					+ "		drilldown: null"
					+ "	}]"
				+ "}],"
				+ "drilldown: {"
					+ "	series: [{"
					+ "		name: \"Microsoft Internet Explorer\","
					+ "		id: \"Microsoft Internet Explorer\","
					+ "		data: ["
					+ "			[\"v11.0\", 24.13],"
					+ "			[\"v8.0\", 17.2],"
					+ "			[\"v9.0\", 8.11],"
					+ "			[\"v10.0\", 5.33],"
					+ "			[\"v6.0\", 1.06],"
					+ "			[\"v7.0\", 0.5]"
					+ "		]"
					+ "	}, {"
					+ "		name: \"Chrome\","
					+ "		id: \"Chrome\","
					+ "		data: ["
					+ "			[\"v40.0\", 5],"
					+ "			[\"v41.0\", 4.32],"
					+ "			[\"v42.0\", 3.68],"
					+ "			[\"v39.0\", 2.96],"
					+ "			[\"v36.0\", 2.53],"
					+ "			[\"v43.0\", 1.45],"
					+ "			[\"v31.0\", 1.24],"
					+ "			[\"v35.0\", 0.85],"
					+ "			[\"v38.0\", 0.6],"
					+ "			[\"v32.0\", 0.55],"
					+ "			[\"v37.0\", 0.38],"
					+ "			[\"v33.0\", 0.19],"
					+ "			[\"v34.0\", 0.14],"
					+ "			[\"v30.0\", 0.14]"
					+ "		]"
					+ "	}, {"
					+ "		name: \"Firefox\","
					+ "		id: \"Firefox\","
					+ "		data: ["
					+ "			[\"v35\", 2.76],"
					+ "			[\"v36\", 2.32],"
					+ "			[\"v37\", 2.31],"
					+ "			[\"v34\", 1.27],"
					+ "			[\"v38\", 1.02],"
					+ "			[\"v31\", 0.33],"
					+ "			[\"v33\", 0.22],"
					+ "			[\"v32\", 0.15]"
					+ "		]"
					+ "	}, {"
					+ "		name: \"Safari\","
					+ "		id: \"Safari\","
					+ "		data: ["
					+ "			[\"v8.0\", 2.56],"
					+ "			[\"v7.1\", 0.77],"
					+ "			[\"v5.1\", 0.42],"
					+ "			[\"v5.0\", 0.3],"
					+ "			[\"v6.1\", 0.29],"
					+ "			[\"v7.0\", 0.26],"
					+ "			[\"v6.2\", 0.17]"
					+ "		]"
					+ "	}, {"
					+ "		name: \"Opera\","
					+ "		id: \"Opera\","
					+ "		data: ["
					+ "			[\"v12.x\", 0.34],"
					+ "			[\"v28\", 0.24],"
					+ "			[\"v27\", 0.17],"
					+ "			[\"v29\", 0.16]"
					+ "		]"
					+ "	}]"
				+ "}"
			+ "}"
		);
		layout.addComponent(pieChart);
		
		HighChart threeDBubbleChart = new HighChart();
		threeDBubbleChart.setHcjs(

			"var options = { "
				+ "chart: {"
					+ "	type: 'bubble',"
					+ "	plotBorderWidth: 1,"
					+ "	zoomType: 'xy', "
					+ " backgroundColor: 'rgba(255, 255, 255, 0.1)'"
				+ "},"
				+ ""
				+ "title: {"
					+ "	text: 'Highcharts bubbles with radial gradient fill'"
				+ "},"
				+ ""
				+ "xAxis: {"
					+ "	gridLineWidth: 1"
				+ "},"
				+ ""
				+ "yAxis: {"
					+ "	startOnTick: false,"
					+ "	endOnTick: false"
				+ "},"
				+ ""
				+ "series: [{"
					+ "	data: ["
					+ "		[9, 81, 63],"
					+ "		[98, 5, 89],"
					+ "		[51, 50, 73],"
					+ "		[41, 22, 14],"
					+ "		[58, 24, 20],"
					+ "		[78, 37, 34],"
					+ "		[55, 56, 53],"
					+ "		[18, 45, 70],"
					+ "		[42, 44, 28],"
					+ "		[3, 52, 59],"
					+ "		[31, 18, 97],"
					+ "		[79, 91, 63],"
					+ "		[93, 23, 23],"
					+ "		[44, 83, 22]"
					+ "	],"
					+ "	marker: {"
					+ "		fillColor: {"
					+ "			radialGradient: { cx: 0.4, cy: 0.3, r: 0.7 },"
					+ "			stops: ["
					+ "				[0, 'rgba(255,255,255,0.5)'],"
					+ "				[1, Highcharts.Color(Highcharts.getOptions().colors[0]).setOpacity(0.5).get('rgba')]"
					+ "			]"
					+ "		}"
					+ "	}"
					+ "}, {"
					+ "	data: ["
					+ "		[42, 38, 20],"
					+ "		[6, 18, 1],"
					+ "		[1, 93, 55],"
					+ "		[57, 2, 90],"
					+ "		[80, 76, 22],"
					+ "		[11, 74, 96],"
					+ "		[88, 56, 10],"
					+ "		[30, 47, 49],"
					+ "		[57, 62, 98],"
					+ "		[4, 16, 16],"
					+ "		[46, 10, 11],"
					+ "		[22, 87, 89],"
					+ "		[57, 91, 82],"
					+ "		[45, 15, 98]"
					+ "	],"
					+ "	marker: {"
					+ "		fillColor: {"
					+ "			radialGradient: { cx: 0.4, cy: 0.3, r: 0.7 },"
					+ "			stops: ["
					+ "				[0, 'rgba(255,255,255,0.5)'],"
					+ "				[1, Highcharts.Color(Highcharts.getOptions().colors[1]).setOpacity(0.5).get('rgba')]"
					+ "			]"
					+ "		}"
					+ "	}"
				+ "}]"
			+ "}"
		);
		layout.addComponent(threeDBubbleChart);
		
		/* No funciona
		HighChart dynamicChart = new HighChart();
		dynamicChart.setHcjs(
				
			"var options = { "
				+ "chart: {"
					+ "	type: 'spline',"
					+ "	animation: Highcharts.svg, // don't animate in old IE"
					+ "	marginRight: 10,"
					+ "	events: {"
					+ "		load: function () {"
					+ ""
					+ "			// set up the updating of the chart each second"
					+ "			var series = this.series[0];"
					+ "			setInterval(function () {"
					+ "				var x = (new Date()).getTime(), // current time"
					+ "					y = Math.random();"
					+ "				series.addPoint([x, y], true, true);"
					+ "			}, 1000);"
					+ "		}"
					+ "	}, "
					+ "	backgroundColor: 'rgba(255, 255, 255, 0.1)'"
				+ "},"
				+ "title: {"
					+ "	text: 'Live random data'"
				+ "},"
				+ "xAxis: {"
					+ "	type: 'datetime',"
					+ "	tickPixelInterval: 150"
				+ "},"
				+ "yAxis: {"
					+ "	title: {"
					+ "		text: 'Value'"
					+ "	},"
					+ "	plotLines: [{"
					+ "		value: 0,"
					+ "		width: 1,"
					+ "		color: '#808080'"
					+ "	}]"
				+ "},"
				+ "tooltip: {"
					+ "	formatter: function () {"
					+ "		return '<b>' + this.series.name + '</b><br/>' + Highcharts.dateFormat('%Y-%m-%d %H:%M:%S', this.x) + '<br/>' + Highcharts.numberFormat(this.y, 2);"
					+ "	}"
				+ "},"
				+ "legend: {"
					+ "	enabled: false"
				+ "},"
				+ "exporting: {"
					+ "	enabled: false"
				+ "},"
				+ "series: [{"
					+ "	name: 'Random data',"
					+ "	data: ("
						+ "function () {"
							+ "	// generate an array of random data"
							+ "	var data = [],"
							+ "	time = (new Date()).getTime(),"
							+ "	i;"
		
							+ "	for (i = -19; i <= 0; i += 1) {"
							+ "		data.push({"
							+ "			x: time + i * 1000,"
							+ "			y: Math.random()"
							+ "		});"
							+ "	}"
							+ "	return data;"
						+ "}()"
					+ ")"
				+ "}]"
			+ "}"
		);
		layout.addComponent(dynamicChart);*/
	
		HighChart threeDColumnChart = new HighChart();
		threeDColumnChart.setHcjs(
		
			"var options = { "
				+ "chart: {"
					+ "	type: 'column',"
					+ "	options3d: {"
						+ "		enabled: true,"
						+ "		alpha: 15,"
						+ "		beta: 15,"
						+ "		viewDistance: 25,"
						+ "		depth: 40"
					+ "	},"
					+ "	marginTop: 80,"
					+ "	marginRight: 40, "
					+ " backgroundColor: 'rgba(255, 255, 255, 0.1)'" 
				+ "},"
			
				+ "title: {"
					+ "	text: 'Total fruit consumption, grouped by gender'"
				+ "},"
				
				+ "xAxis: {"
					+ "	categories: ['Apples', 'Oranges', 'Pears', 'Grapes', 'Bananas']"
				+ "},"
				
				+ "yAxis: {"
					+ "	allowDecimals: false,"
					+ "	min: 0,"
					+ "	title: {"
						+ "		text: 'Number of fruits'"
					+ "	}"
				+ "},"
				
				+ "tooltip: {"
					+ "	headerFormat: '<b>{point.key}</b><br>',"
					+ "	pointFormat: '<span style=\"color:{series.color}\">\u25CF</span> {series.name}: {point.y} / {point.stackTotal}'"
				+ "},"
				
				+ "plotOptions: {"
					+ "	column: {"
						+ "		stacking: 'normal',"
						+ "		depth: 40"
					+ "	}"
				+ "},"
				
				+ "series: ["
					+ "{"
						+ "	name: 'John',"
						+ "	data: [5, 3, 4, 7, 2],"
						+ "	stack: 'male'"
					+ "}, {"
						+ "	name: 'Joe',"
						+ "	data: [3, 4, 4, 2, 5],"
						+ "	stack: 'male'"
					+ "}, {"
						+ "	name: 'Jane',"
						+ "	data: [2, 5, 6, 2, 1],"
						+ "	stack: 'female'"
					+ "}, {"
						+ "	name: 'Janet',"
						+ "	data: [3, 0, 4, 4, 3],"
						+ "	stack: 'female'"
					+ "}"
				+ "]"
				
			+ "}"
		);
		layout.addComponent(threeDColumnChart);
		
	}

}